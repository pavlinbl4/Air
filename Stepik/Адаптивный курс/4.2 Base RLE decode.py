"""Кодирование длин серий — это базовый алгоритм сжатия данных.
В этой задаче мы реализуем алгоритм дешифровки строк, закодированных с помощью одного из самых простых  вариантов кодирования длин серий.
На вход алгоритму подаётся строка, содержащая цифры и символы латинского алфавита.
Эта строка разбивается на так называемые "серии", которые кодируются парой число-символ или просто символ
(в таком случае число считается равным единице). Результат должен содержать эти серии в том же порядке,
что они и встречаются в исходной строке, при этом каждая серия раскрывается в последовательность символов соответствующей длины.

Например, рассмотрим строку
3ab4c2CaB
Разобъём её на серии
3a b 4c 2C a B
После чего преобразуем серии и получим исходную закодированную строку:
aaabccccCCaB
Формат ввода:
Одна строка, содержащая закодированную последовательность.

Формат вывода:
Строка, содержащая раскодированную последовательность."""

text = input()
# text = "13ab4c2CaB"
dd = []
x = 0
while x <= len(text) - 1:
    if (text[x]).isdecimal() == True and (text[x + 1]).isdecimal() == False:
        dd.append(int(text[x]) * text[x + 1])
        x = x + 2

    elif (text[x]).isdecimal() == True and (text[x + 1]).isdecimal() == True:
        dd.append((int(text[x])*10 + int(text[x + 1])) * text[x + 2])
        # print((int(text[x])*10 + int(text[x + 1])))
        x = x + 3
    else:
        dd.append(text[x])
        x = x + 1
print(*dd, sep="")
# print("aaaaaaaaaaaaabccccCCaB".count("a"))
